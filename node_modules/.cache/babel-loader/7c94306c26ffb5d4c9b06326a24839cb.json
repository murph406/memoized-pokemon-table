{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmurphy/Desktop/learning/react-pro/reactive-pokemon/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { getByName } from \"./API\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst calculatePower = pokemon => pokemon.hp + pokemon.attack + pokemon.defense + pokemon.special_attack + pokemon.special_defense + pokemon.speed;\n\nconst PokemonTable = _ref => {\n  let {\n    pokemon\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 6,\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Power\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: pokemon.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.type.join(\",\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.hp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.attack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.defense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.special_attack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.special_defense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.speed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: p.power\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PokemonTable;\nconst MemoedPokemonTable = /*#__PURE__*/React.memo(PokemonTable);\n_c2 = MemoedPokemonTable;\nexport default function App() {\n  _s();\n\n  const [pokemon, setPokemon] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const onSetSearch = useCallback(evt => {\n    const intValue = parseInt(evt.target.value, 10);\n    if (isNaN(intValue)) return;\n    setThreshold(parseInt(evt.target.value, 10));\n  }, []);\n  useEffect(() => {\n    getByName(search).then(setPokemon);\n  }, [search]);\n  const pokemonWithPower = useMemo(() => pokemon.map(p => ({ ...p,\n    power: calculatePower(p)\n  })), [pokemon]);\n  const [threshold, setThreshold] = useState(500);\n  const onSetThreshold = useCallback(evt => {\n    const intValue = parseInt(evt.target.value, 10);\n    if (isNaN(intValue)) return;\n    setThreshold(parseInt(evt.target.value, 10));\n  }, []);\n  const countOverThreshold = useMemo(() => pokemonWithPower.filter(p => p.power > threshold).length, [pokemonWithPower, threshold]);\n  const min = useMemo(() => Math.min(...pokemonWithPower.map(p => p.power)), [pokemonWithPower]);\n  const max = useMemo(() => Math.max(...pokemonWithPower.map(p => p.power)), [pokemonWithPower]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search.toString(),\n        onChange: onSetSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Power threshold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: threshold.toString(),\n        onChange: onSetThreshold,\n        autoFocus: true,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count over threshold: \", countOverThreshold]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"two-column\",\n      children: [/*#__PURE__*/_jsxDEV(MemoedPokemonTable, {\n        pokemon: pokemonWithPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Min: \", min]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Max: \", max]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ShxjEoX8o7727iFH8Qfvxr8vPHs=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PokemonTable\");\n$RefreshReg$(_c2, \"MemoedPokemonTable\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/ryanmurphy/Desktop/learning/react-pro/reactive-pokemon/src/App.tsx"],"names":["React","useEffect","useState","useMemo","useCallback","getByName","calculatePower","pokemon","hp","attack","defense","special_attack","special_defense","speed","PokemonTable","map","p","id","name","type","join","power","MemoedPokemonTable","memo","App","setPokemon","search","setSearch","onSetSearch","evt","intValue","parseInt","target","value","isNaN","setThreshold","then","pokemonWithPower","threshold","onSetThreshold","countOverThreshold","filter","length","min","Math","max","toString","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { Pokemon, getAll, getByName } from \"./API\";\n\nimport \"./styles.css\";\n\n\ninterface PokemonWithPower extends Pokemon {\n  power: number\n}\n\nconst calculatePower = (pokemon: Pokemon) =>\n  pokemon.hp +\n  pokemon.attack +\n  pokemon.defense +\n  pokemon.special_attack +\n  pokemon.special_defense +\n  pokemon.speed;\n\n\nconst PokemonTable: React.FunctionComponent<{\n  pokemon: PokemonWithPower[];\n}> = ({ pokemon }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <td>ID</td>\n          <td>Name</td>\n          <td>Type</td>\n          <td colSpan={6}>Stats</td>\n          <td>Power</td>\n        </tr>\n      </thead>\n      <tbody>\n        {pokemon.map((p) => (\n          <tr key={p.id}>\n            <td>{p.id}</td>\n            <td>{p.name}</td>\n            <td>{p.type.join(\",\")}</td>\n            <td>{p.hp}</td>\n            <td>{p.attack}</td>\n            <td>{p.defense}</td>\n            <td>{p.special_attack}</td>\n            <td>{p.special_defense}</td>\n            <td>{p.speed}</td>\n            <td>{p.power}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst MemoedPokemonTable = React.memo(PokemonTable);\n\nexport default function App() {\n  const [pokemon, setPokemon] = useState<Pokemon[]>([]);\n  const [search, setSearch ] = useState(\"\")\n\n  const onSetSearch = useCallback((evt) => {\n    const intValue = parseInt(evt.target.value, 10)\n    if (isNaN(intValue)) return\n\n    setThreshold(parseInt(evt.target.value, 10))\n  }, [])\n\n  useEffect(() => {\n    getByName(search).then(setPokemon)\n  }, [search])\n\n  const pokemonWithPower = useMemo(() => pokemon.map((p) => ({ ...p, power: calculatePower(p) })), [pokemon])\n\n  const [threshold, setThreshold] = useState(500);\n\n  const onSetThreshold = useCallback((evt) => {\n    const intValue = parseInt(evt.target.value, 10)\n    if (isNaN(intValue)) return\n\n    setThreshold(parseInt(evt.target.value, 10))\n  }, [])\n\n  const countOverThreshold = useMemo(() => pokemonWithPower.filter((p) => p.power > threshold).length, [pokemonWithPower, threshold])\n  const min = useMemo(() => Math.min(...pokemonWithPower.map(p => p.power)), [pokemonWithPower])\n  const max = useMemo(() => Math.max(...pokemonWithPower.map(p => p.power)), [pokemonWithPower])\n\n\n  return (\n    <div>\n      <div className=\"top-bar\">\n\n        <div>Search</div>\n        <input type=\"text\" value={search.toString()} onChange={onSetSearch}></input>\n\n        <div>Power threshold</div>\n        <input type=\"text\" value={threshold.toString()} onChange={onSetThreshold} autoFocus style={{ cursor: 'pointer' }}></input>\n\n        <div>Count over threshold: {countOverThreshold}</div>\n\n      </div>\n      <div className=\"two-column\">\n        <MemoedPokemonTable pokemon={pokemonWithPower} />\n        <div>\n          <div>Min: {min}</div>\n          <div>Max: {max}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}